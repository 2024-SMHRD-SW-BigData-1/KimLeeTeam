package Model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class StudentDAO {
   
   Connection conn = null;
   PreparedStatement psmt = null;
   ResultSet rs = null;
   
   // 학생 등록을 위해 필요한 정보 Controller가 보낸 dto를
   // 받아서 데이터베이스에 저장하고있는 메서드 insert()
   
    //학생 정보 전체 조회
	public ArrayList<StudentDTO> selectAll() {
		ArrayList <StudentDTO> list = new ArrayList<>();
		
		// 동적 로딩
		dbOpen();
		
		
		try {
			String sql = "SELECT * FROM STUDENT ";
			
			psmt = conn.prepareStatement(sql);
			
				rs= psmt.executeQuery();
				//rs
				// 1) 자바에서 사용할 수 있는 테이블 형태의 데이터
				// 2) cursor가 하나 생겨있음 : rs
				
				while(rs.next()) {
					//rs.next
					//1)커서를 한 칸 아래로 움직이는 기능
					//2) 데이터가 있는지 없는지 t/f 결과값
					
					//while문 동작 -데이터가 있는 동안 동작하는 while문
					String name = rs.getString("name");
					int age = rs.getInt("age");
					String gender = rs.getString("gender");
					String cls = rs.getString("class");
					
					StudentDTO dto = new StudentDTO(name,age,gender,cls);
					list.add(dto);
				}
				    } catch (SQLException e) {
				System.out.println("sql문 예외사항 발생");
				e.printStackTrace();
			}finally {
				dbClose();
			}
				
				
		//list : 학생 정보들이 StudentDTO 자료형으로 다 저장	
		  return list;
	   }
	
	
   
   
   public int insert(StudentDTO dto) {

      int cnt = 0;
      // 1. 동적 로딩 + 권한확인
      dbOpen();
      try {
         String sql = "insert into student values(?, ?, ?, ?)";
         psmt = conn.prepareStatement(sql);

         psmt.setString(1, dto.getName());
         psmt.setInt(2, dto.getAge());
         psmt.setString(3, dto.getGender());
         psmt.setString(4, dto.getCls());

         cnt = psmt.executeUpdate();
      } catch (SQLException e) {
         System.out.println("sql 실행 에러");
         e.printStackTrace();
      } finally {

         dbClose();
         
      }

      return cnt;
   }

   // Contoller가 보내준 학생 삭제를 위한 데이터를
   // 받아서 데이터베이스에 있는 행을 삭제..
   public int delete(StudentDTO dto) {


      int cnt = 0;
      try {
         Class.forName("oracle.jdbc.driver.OracleDriver");

         // 2. 준비물 3가지 권한 확인
         String id = "hr";
         String pw = "hr";
         String url = "jdbc:oracle:thin:@localhost:1521:xe";

         conn = DriverManager.getConnection(url, id, pw);
         // 3. 쿼리문
         String sql = "delete from student where name = ? and class = ?";
         psmt = conn.prepareStatement(sql);
         
         psmt.setString(1, dto.getName());
         psmt.setString(2, dto.getCls());
         
         cnt = psmt.executeUpdate();
         
      } catch (ClassNotFoundException e) {
         System.out.println("동적 로딩 실패");
         e.printStackTrace();
      } catch (SQLException e) {
         System.out.println("권한 확인 실패");
         e.printStackTrace();
      } finally {
         try {
            if(psmt != null)
               psmt.close();
            if(conn != null)
               conn.close();
         } catch (SQLException e) {
            e.printStackTrace();
         }
      }

      return cnt;
   }

   // Controller가 
   // 학생정보 수정을 위해 보내준 데이터를 받아주는
   // update
   public int update(StudentDTO dto) {
      
      int cnt = 0;
      // JDBC
      dbOpen();
      String sql = "update student set class = ? where name = ? and age = ?";
      
      try {
         psmt = conn.prepareStatement(sql);
         
         psmt.setString(1, dto.getCls());
         psmt.setString(2, dto.getName());
         psmt.setInt(3, dto.getAge());
         
         cnt = psmt.executeUpdate();
         
      } catch (SQLException e) {
         e.printStackTrace();
      }finally {
         dbClose();
      }
      
      return cnt;
   }
   
   // 데이터베이스와의 동적로딩/권한확인
   public void dbOpen() {
      
      try {
         Class.forName("oracle.jdbc.driver.OracleDriver");

         String id = "hr";
         String pw = "hr";
         String url = "jdbc:oracle:thin:@localhost:1521:xe";

         conn = DriverManager.getConnection(url, id, pw);
      }catch (ClassNotFoundException e) {
         System.out.println("동적 로딩 실패");
         e.printStackTrace();
      } catch (SQLException e) {
         System.out.println("권한 확인 실패");
         e.printStackTrace();
      } 
      
      
   }
   
   
   // 데이터베이스 자원 반납
   public void dbClose() {
      try {
         if (rs!=null)
            rs.close();
         if (psmt != null)
            psmt.close();
         if (conn != null)
            conn.close();
      } catch (SQLException e) {
         e.printStackTrace();
      }
   }
   
   
   
   
   
   
   
   
   
   
   
   
   
}
