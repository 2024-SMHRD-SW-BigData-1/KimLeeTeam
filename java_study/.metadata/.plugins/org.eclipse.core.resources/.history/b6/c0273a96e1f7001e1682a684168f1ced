package Model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class StudentDAO {

	// 학생 등록을 위해 필요한 정보 Controller가 보낸 dto를
	// 받아서 데이터베이스에 저장하고있는 메서드 insert()
	public int insert(StudentDTO dto) {
         	
		int cnt =0;
		Connection conn = null;	
		PreparedStatement psmt = null;
		
		try {
			
			//1. 동적 로딩
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			String id = "hr";
			String pw = "hr";
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			
			conn = DriverManager.getConnection(url, id, pw);
			
			String sql = "insert into student values(?,?,?,?)";
			psmt = conn.prepareStatement(sql);
			
			psmt.setString(1, dto.getName());
			psmt.setInt(2, dto.getAge());
			psmt.setString(3, dto.getGender());
			psmt.setString(4, dto.getCls());
			
			cnt = psmt.executeUpdate();

		}catch (ClassNotFoundException e) {
           System.out.println("동적 로딩 실패");
           e.printStackTrace();
		} catch (SQLException e) {
			System.out.println("권한 확인 실패");
			e.printStackTrace();
		}finally {
			try {
				if(psmt != null)
				   psmt.close();
				if(conn != null)
					conn.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
			
			
			
		}
		
		
		
		
		
		return cnt;
		
	}
	
	//Controller가 보내준 학생 삭제를 위한 데이터를
	//받아서 데이터베이스에 있는 행을 삭제...
	public int delete(StudentDTO dto) {
		
		Connection conn =null;
		PreparedStatement psmt = null;
		int cnt = 0;
		try {
			//1. 동적 로딩
			Class.forName("oracle.jdbc.driver.OracleDriver");
		    //2. 준비물 3가지 확인
			String id = "hr";
			String pw = "hr";
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			
			conn = DriverManager.getConnection(url, id, pw);
		   //3. 쿼리문
			String sql = "delete from student where name = ? and class = ? ";
		    psmt = conn.prepareStatement(sql);
		    
		    psmt.setString(1, dto.getName());
		    psmt.setString(2, dto.getCls());
		    
		    cnt = psmt.executeUpdate();
		    
		    
		} catch (ClassNotFoundException e) {
			System.out.println("동적 로딩 실패");
			e.printStackTrace();
		} catch (SQLException e) {
			System.out.println("권한 확인 실패");
			e.printStackTrace();
		}finally {
			
			try {
				if(psmt != null)
				psmt.close();
				if(conn != null)
				conn.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			
		}
		
		
		return cnt;
	}
	
}
